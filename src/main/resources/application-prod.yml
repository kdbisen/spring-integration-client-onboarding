# Production Profile Configuration
spring:
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/onboarding_db}
    username: ${DATABASE_USERNAME:onboarding_user}
    password: ${DATABASE_PASSWORD:secure_password}
    driver-class-name: org.postgresql.Driver
  
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        dialect: org.hibernate.dialect.PostgreSQLDialect

# Production Logging
logging:
  level:
    com.adyanta.onboarding: INFO
    org.springframework.integration: WARN
    org.springframework.security: WARN
    org.springframework.web: WARN
    org.hibernate.SQL: WARN
  file:
    name: /var/log/client-onboarding/application.log
  logback:
    rollingpolicy:
      max-file-size: 100MB
      max-history: 30
      total-size-cap: 3GB

# Production Service URLs
kyc:
  service:
    url: ${KYC_SERVICE_URL:https://kyc.company.com/api/v1/verify}
    timeout: ${KYC_SERVICE_TIMEOUT:30000}

data:
  processor:
    service:
      url: ${DATA_PROCESSOR_SERVICE_URL:https://data-processor.company.com/api/v1/process}
      timeout: ${DATA_PROCESSOR_SERVICE_TIMEOUT:30000}

reference:
  data:
    service:
      url: ${REFERENCE_DATA_SERVICE_URL:https://reference-data.company.com/api/v1/data}
      timeout: ${REFERENCE_DATA_SERVICE_TIMEOUT:30000}

les:
  service:
    url: ${LES_SERVICE_URL:https://les.company.com/api/v1/verify}
    timeout: ${LES_SERVICE_TIMEOUT:30000}

notification:
  service:
    url: ${NOTIFICATION_SERVICE_URL:https://notification.company.com/api/v1/send}
    timeout: ${NOTIFICATION_SERVICE_TIMEOUT:30000}

# Production Apigee Configuration
apigee:
  base:
    url: ${APIGEE_BASE_URL:https://your-prod-apigee-instance.apigee.net}
  client:
    id: ${APIGEE_CLIENT_ID:prod-client-id}
    secret: ${APIGEE_CLIENT_SECRET:prod-client-secret}
  timeout: ${APIGEE_TIMEOUT:30000}

# Production Circuit Breaker (Strict)
resilience4j:
  circuitbreaker:
    instances:
      kyc-service:
        failure-rate-threshold: 30
        wait-duration-in-open-state: 60s
        sliding-window-size: 20
        minimum-number-of-calls: 10
      data-processor-service:
        failure-rate-threshold: 30
        wait-duration-in-open-state: 60s
        sliding-window-size: 20
        minimum-number-of-calls: 10
      reference-data-service:
        failure-rate-threshold: 30
        wait-duration-in-open-state: 60s
        sliding-window-size: 20
        minimum-number-of-calls: 10
      les-service:
        failure-rate-threshold: 30
        wait-duration-in-open-state: 60s
        sliding-window-size: 20
        minimum-number-of-calls: 10
      notification-service:
        failure-rate-threshold: 30
        wait-duration-in-open-state: 60s
        sliding-window-size: 20
        minimum-number-of-calls: 10
  retry:
    instances:
      kyc-service:
        max-attempts: 5
        wait-duration: 2s
        exponential-backoff-multiplier: 2
      data-processor-service:
        max-attempts: 5
        wait-duration: 2s
        exponential-backoff-multiplier: 2
      reference-data-service:
        max-attempts: 5
        wait-duration: 2s
        exponential-backoff-multiplier: 2
      les-service:
        max-attempts: 5
        wait-duration: 2s
        exponential-backoff-multiplier: 2
      notification-service:
        max-attempts: 5
        wait-duration: 2s
        exponential-backoff-multiplier: 2
  timelimiter:
    instances:
      kyc-service:
        timeout-duration: 60s
      data-processor-service:
        timeout-duration: 60s
      reference-data-service:
        timeout-duration: 60s
      les-service:
        timeout-duration: 60s
      notification-service:
        timeout-duration: 60s

# Security Configuration
spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${JWT_ISSUER_URI:https://your-prod-apigee-instance.apigee.net/oauth2/tokeninfo}
          jwk-set-uri: ${JWT_JWK_SET_URI:https://your-prod-apigee-instance.apigee.net/oauth2/tokeninfo}

# Management and Monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    export:
      prometheus:
        enabled: true
